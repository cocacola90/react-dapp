{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\nexport function useTokenList(tokenListURI, overrideChainId, tags) {\n  var _useEthers = useEthers(),\n      providerChainId = _useEthers.chainId;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      tokenList = _useState2[0],\n      setTokenList = _useState2[1];\n\n  var chainId = overrideChainId || providerChainId;\n  useEffect(function () {\n    fetch(tokenListURI).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var _yield$response$json, name, logoURI, tokens, errorMessage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!response.ok) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 3;\n                return response.json();\n\n              case 3:\n                _yield$response$json = _context.sent;\n                name = _yield$response$json.name;\n                logoURI = _yield$response$json.logoURI;\n                tokens = _yield$response$json.tokens;\n                setTokenList({\n                  name: name,\n                  logoURI: logoURI,\n                  tokens: tokens.filter(function (token) {\n                    var sameChainId = token.chainId === chainId;\n\n                    if (!tags) {\n                      return sameChainId;\n                    }\n\n                    return sameChainId && token.tags && token.tags.some(function (tag) {\n                      return tags.includes(tag);\n                    });\n                  })\n                });\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.next = 12;\n                return response.text();\n\n              case 12:\n                errorMessage = _context.sent;\n                return _context.abrupt(\"return\", Promise.reject(new Error(errorMessage)));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(function (err) {\n      console.log(err);\n      setTokenList(undefined);\n    });\n  }, [tokenListURI, chainId]);\n  return tokenList;\n}","map":null,"metadata":{},"sourceType":"module"}