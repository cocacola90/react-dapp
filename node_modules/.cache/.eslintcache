[{"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/index.tsx":"1","/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/reportWebVitals.ts":"2","/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/App.tsx":"3"},{"size":789,"mtime":1640310942917,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1640310207986,"results":"6","hashOfConfig":"5"},{"size":1304,"mtime":1640310955190,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14iakxf",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/index.tsx",[],"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/reportWebVitals.ts",[],"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/App.tsx",["15","16"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { useEtherBalance, useEthers, useSendTransaction } from '@usedapp/core';\nimport { formatEther,formatUnits} from '@ethersproject/units'\nconst unityContext = new UnityContext({\n  loaderUrl: \"unity/Build/unity.loader.js\",\n  dataUrl: \"unity/Build/unity.data\",\n  frameworkUrl: \"unity/Build/unity.framework.js\",\n  codeUrl: \"unity/Build/unity.wasm\",\n});\n\nfunction EtherBalanceToUnity(amount : string) {\n  unityContext.send(\"/Canvas/BalanceText\", \"EtherBalanceToUnity\", amount);\n  console.log(amount);\n}\n\nconst App = () => {\n  const { activateBrowserWallet, account } = useEthers()\n\n  const { sendTransaction } = useSendTransaction()\n  const etherBalance = useEtherBalance(account)\n  unityContext.on(\"SendTranscationFromUnity\",( address, amount) => {\n    sendTransaction({ to: address, value: amount })\n  });\n  return <div>\n    <div>\n      <button onClick={() => { \n            activateBrowserWallet(); \n          }}>Connect</button>\n          {account && <p>Account: {account}</p>}\n          {etherBalance && EtherBalanceToUnity(formatEther(etherBalance))}\n    </div>\n    <div>\n      <Unity unityContext={unityContext} />\n    </div>\n  </div>\n    \n}\n\nexport default App;",{"ruleId":"17","severity":1,"message":"18","line":2,"column":8,"nodeType":"19","messageId":"20","endLine":2,"endColumn":12},{"ruleId":"17","severity":1,"message":"21","line":6,"column":22,"nodeType":"19","messageId":"20","endLine":6,"endColumn":33},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'formatUnits' is defined but never used."]