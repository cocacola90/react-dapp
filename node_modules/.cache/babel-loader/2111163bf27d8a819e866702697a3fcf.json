{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback } from 'react';\nimport { useConfig } from '../providers/config/context';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nexport function useEthers() {\n  var result = useWeb3React();\n\n  var _useConfig = useConfig(),\n      networks = _useConfig.networks;\n\n  var activateBrowserWallet = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(onError, throwErrors) {\n      var injected;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              injected = new InjectedConnector({\n                supportedChainIds: networks === null || networks === void 0 ? void 0 : networks.map(function (network) {\n                  return network.chainId;\n                })\n              });\n\n              if (!(onError instanceof Function)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return result.activate(injected, onError, throwErrors);\n\n            case 4:\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return result.activate(injected, undefined, throwErrors);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [networks]);\n  return Object.assign(Object.assign({}, result), {\n    activateBrowserWallet: activateBrowserWallet\n  });\n}","map":null,"metadata":{},"sourceType":"module"}