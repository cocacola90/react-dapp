{"ast":null,"code":"import { ContractFactory } from 'ethers';\nexport async function deployContract(contractAbi, signer) {\n  const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n  const contract = await factory.deploy();\n  return await contract.deployTransaction.wait();\n}","map":{"version":3,"sources":["/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/@usedapp/core/src/helpers/contract.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,QAAwC,QAAxC;AAOA,OAAO,eAAe,cAAf,CACL,WADK,EAEL,MAFK,EAEiC;AAEtC,QAAM,OAAO,GAAG,IAAI,eAAJ,CAAoB,WAAW,CAAC,GAAhC,EAAqC,WAAW,CAAC,QAAjD,EAA2D,MAA3D,CAAhB;AACA,QAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,MAAR,EAAvB;AACA,SAAO,MAAM,QAAQ,CAAC,iBAAT,CAA2B,IAA3B,EAAb;AACD","sourcesContent":["import { ContractFactory, ethers } from 'ethers'\n\ninterface ContractAbi {\n  abi: ethers.ContractInterface\n  bytecode: ethers.utils.BytesLike\n}\n\nexport async function deployContract(\n  contractAbi: ContractAbi,\n  signer: ethers.providers.JsonRpcSigner\n): Promise<ethers.providers.TransactionReceipt> {\n  const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer)\n  const contract = await factory.deploy()\n  return await contract.deployTransaction.wait()\n}\n"]},"metadata":{},"sourceType":"module"}