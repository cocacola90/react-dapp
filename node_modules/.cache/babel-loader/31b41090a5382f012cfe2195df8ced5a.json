{"ast":null,"code":"var _jsxFileName = \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { useEtherBalance, useEthers, useSendTransaction } from '@usedapp/core';\nimport { formatEther } from '@ethersproject/units';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unityContext = new UnityContext({\n  loaderUrl: \"unity/Build/unity.loader.js\",\n  dataUrl: \"unity/Build/unity.data\",\n  frameworkUrl: \"unity/Build/unity.framework.js\",\n  codeUrl: \"unity/Build/unity.wasm\"\n});\n\nfunction EtherBalanceToUnity(amount) {\n  unityContext.send(\"/Canvas/BalanceText\", \"EtherBalanceToUnity\", amount);\n  console.log(amount);\n}\n\n_c = EtherBalanceToUnity;\n\nconst App = () => {\n  _s();\n\n  const {\n    activateBrowserWallet,\n    account\n  } = useEthers();\n  const {\n    sendTransaction\n  } = useSendTransaction();\n  const etherBalance = useEtherBalance(account);\n  unityContext.on(\"SendTranscationFromUnity\", (address, amount) => {\n    sendTransaction({\n      to: address,\n      value: amount\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          activateBrowserWallet();\n        },\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this), etherBalance && EtherBalanceToUnity(formatEther(etherBalance))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Unity, {\n        unityContext: unityContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"/H/xSG3DIR0Lqa/PeXmpV+zd34c=\", false, function () {\n  return [useEthers, useSendTransaction, useEtherBalance];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EtherBalanceToUnity\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/src/App.tsx"],"names":["React","Unity","UnityContext","useEtherBalance","useEthers","useSendTransaction","formatEther","unityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","EtherBalanceToUnity","amount","send","console","log","App","activateBrowserWallet","account","sendTransaction","etherBalance","on","address","to","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,mBAApC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,kBAArC,QAA+D,eAA/D;AACA,SAASC,WAAT,QAAuC,sBAAvC;;AACA,MAAMC,YAAY,GAAG,IAAIL,YAAJ,CAAiB;AACpCM,EAAAA,SAAS,EAAE,6BADyB;AAEpCC,EAAAA,OAAO,EAAE,wBAF2B;AAGpCC,EAAAA,YAAY,EAAE,gCAHsB;AAIpCC,EAAAA,OAAO,EAAE;AAJ2B,CAAjB,CAArB;;AAOA,SAASC,mBAAT,CAA6BC,MAA7B,EAA8C;AAC5CN,EAAAA,YAAY,CAACO,IAAb,CAAkB,qBAAlB,EAAyC,qBAAzC,EAAgED,MAAhE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;KAHQD,mB;;AAKT,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,qBAAF;AAAyBC,IAAAA;AAAzB,MAAqCf,SAAS,EAApD;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAsBf,kBAAkB,EAA9C;AACA,QAAMgB,YAAY,GAAGlB,eAAe,CAACgB,OAAD,CAApC;AACAZ,EAAAA,YAAY,CAACe,EAAb,CAAgB,0BAAhB,EAA2C,CAAEC,OAAF,EAAWV,MAAX,KAAsB;AAC/DO,IAAAA,eAAe,CAAC;AAAEI,MAAAA,EAAE,EAAED,OAAN;AAAeE,MAAAA,KAAK,EAAEZ;AAAtB,KAAD,CAAf;AACD,GAFD;AAGA,sBAAO;AAAA,4BACL;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACjBK,UAAAA,qBAAqB;AACtB,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIOC,OAAO,iBAAI;AAAA,gCAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAJlB,EAKOE,YAAY,IAAIT,mBAAmB,CAACN,WAAW,CAACe,YAAD,CAAZ,CAL1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAQL;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,YAAY,EAAEd;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaD,CArBD;;GAAMU,G;UACuCb,S,EAEfC,kB,EACPF,e;;;MAJjBc,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { useEtherBalance, useEthers, useSendTransaction } from '@usedapp/core';\nimport { formatEther,formatUnits} from '@ethersproject/units'\nconst unityContext = new UnityContext({\n  loaderUrl: \"unity/Build/unity.loader.js\",\n  dataUrl: \"unity/Build/unity.data\",\n  frameworkUrl: \"unity/Build/unity.framework.js\",\n  codeUrl: \"unity/Build/unity.wasm\",\n});\n\nfunction EtherBalanceToUnity(amount : string) {\n  unityContext.send(\"/Canvas/BalanceText\", \"EtherBalanceToUnity\", amount);\n  console.log(amount);\n}\n\nconst App = () => {\n  const { activateBrowserWallet, account } = useEthers()\n\n  const { sendTransaction } = useSendTransaction()\n  const etherBalance = useEtherBalance(account)\n  unityContext.on(\"SendTranscationFromUnity\",( address, amount) => {\n    sendTransaction({ to: address, value: amount })\n  });\n  return <div>\n    <div>\n      <button onClick={() => { \n            activateBrowserWallet(); \n          }}>Connect</button>\n          {account && <p>Account: {account}</p>}\n          {etherBalance && EtherBalanceToUnity(formatEther(etherBalance))}\n    </div>\n    <div>\n      <Unity unityContext={unityContext} />\n    </div>\n  </div>\n    \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}