{"ast":null,"code":"export function notificationReducer(state, action) {\n  var _a;\n\n  const {\n    chainId\n  } = action;\n  const chainState = (_a = state[chainId]) !== null && _a !== void 0 ? _a : [];\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return Object.assign(Object.assign({}, state), {\n        [chainId]: [action.notification, ...chainState]\n      });\n\n    case 'REMOVE_NOTIFICATION':\n      {\n        return Object.assign(Object.assign({}, state), {\n          [chainId]: chainState.filter(notification => notification.id !== action.notificationId)\n        });\n      }\n  }\n}","map":{"version":3,"sources":["/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/@usedapp/core/src/providers/notifications/reducer.ts"],"names":[],"mappings":"AAiBA,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAAoD,MAApD,EAAkE;;;AACtE,QAAM;AAAE,IAAA;AAAF,MAAc,MAApB;AACA,QAAM,UAAU,GAAA,CAAA,EAAA,GAAG,KAAK,CAAC,OAAD,CAAR,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,EAAjB,GAAqB,EAArC;;AAEA,UAAQ,MAAM,CAAC,IAAf;AACE,SAAK,kBAAL;AACE,aAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,SAAC,OAAD,GAAW,CAAC,MAAM,CAAC,YAAR,EAAsB,GAAG,UAAzB;AADH,OADV,CAAA;;AAIF,SAAK,qBAAL;AAA4B;AAC1B,eAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,WAAC,OAAD,GAAW,UAAU,CAAC,MAAX,CAAmB,YAAD,IAAkB,YAAY,CAAC,EAAb,KAAoB,MAAM,CAAC,cAA/D;AADH,SADV,CAAA;AAID;AAXH;AAaD","sourcesContent":["import { ChainId } from '../../constants'\nimport { Notification, Notifications } from './model'\n\ninterface AddNotification {\n  type: 'ADD_NOTIFICATION'\n  chainId: ChainId\n  notification: Notification\n}\n\ninterface RemoveNotification {\n  type: 'REMOVE_NOTIFICATION'\n  chainId: ChainId\n  notificationId: string\n}\n\ntype Action = AddNotification | RemoveNotification\n\nexport function notificationReducer(state: Notifications, action: Action): Notifications {\n  const { chainId } = action\n  const chainState = state[chainId] ?? []\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        [chainId]: [action.notification, ...chainState],\n      }\n    case 'REMOVE_NOTIFICATION': {\n      return {\n        ...state,\n        [chainId]: chainState.filter((notification) => notification.id !== action.notificationId),\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}