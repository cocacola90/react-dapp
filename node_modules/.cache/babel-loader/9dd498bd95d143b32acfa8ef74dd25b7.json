{"ast":null,"code":"import _slicedToArray from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers } from '../../hooks';\nimport { NotificationsContext } from './context';\nimport { DEFAULT_NOTIFICATIONS } from './model';\nimport { notificationReducer } from './reducer';\nimport { nanoid } from 'nanoid';\nexport function NotificationsProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(notificationReducer, DEFAULT_NOTIFICATIONS),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      notifications = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useEthers = useEthers(),\n      chainId = _useEthers.chainId,\n      account = _useEthers.account;\n\n  useEffect(function () {\n    if (account && chainId) {\n      dispatch({\n        type: 'ADD_NOTIFICATION',\n        chainId: chainId,\n        notification: {\n          type: 'walletConnected',\n          id: nanoid(),\n          submittedAt: Date.now(),\n          address: account\n        }\n      });\n    }\n  }, [account, chainId]);\n  var addNotification = useCallback(function (_ref2) {\n    var notification = _ref2.notification,\n        chainId = _ref2.chainId;\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      chainId: chainId,\n      notification: Object.assign(Object.assign({}, notification), {\n        id: nanoid()\n      })\n    });\n  }, [dispatch]);\n  var removeNotification = useCallback(function (_ref3) {\n    var notificationId = _ref3.notificationId,\n        chainId = _ref3.chainId;\n    dispatch({\n      type: 'REMOVE_NOTIFICATION',\n      chainId: chainId,\n      notificationId: notificationId\n    });\n  }, [dispatch]);\n  return _jsx(NotificationsContext.Provider, {\n    value: {\n      addNotification: addNotification,\n      notifications: notifications,\n      removeNotification: removeNotification\n    },\n    children: children\n  }, void 0);\n}","map":null,"metadata":{},"sourceType":"module"}