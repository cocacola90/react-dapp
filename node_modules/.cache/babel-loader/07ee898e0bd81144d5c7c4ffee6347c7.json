{"ast":null,"code":"// organize imports in alphabet order to sparse the conflict when adding a new chain\nimport { Localhost, Hardhat, Avalanche, BSC, BSCTestnet, Fantom, Harmony, Mainnet, Ropsten, Rinkeby, Goerli, Kovan, Moonriver, MoonbaseAlpha, Palm, Polygon, Mumbai, Songbird, Theta, ThetaTestnet, xDai, OptimismKovan, Optimism } from '../model'; // rough alphabet order (put network from the same chain together)\n\nexport const DEFAULT_SUPPORTED_CHAINS = [Localhost, Hardhat, Avalanche, Mainnet, Ropsten, Rinkeby, Goerli, Kovan, BSC, BSCTestnet, Fantom, Harmony, Moonriver, MoonbaseAlpha, Palm, Polygon, Mumbai, Songbird, Theta, ThetaTestnet, xDai, OptimismKovan, Optimism];\nexport var ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"Mainnet\"] = 1] = \"Mainnet\";\n  ChainId[ChainId[\"Ropsten\"] = 3] = \"Ropsten\";\n  ChainId[ChainId[\"Rinkeby\"] = 4] = \"Rinkeby\";\n  ChainId[ChainId[\"Goerli\"] = 5] = \"Goerli\";\n  ChainId[ChainId[\"Kovan\"] = 42] = \"Kovan\";\n  ChainId[ChainId[\"BSC\"] = 56] = \"BSC\";\n  ChainId[ChainId[\"BSCTestnet\"] = 97] = \"BSCTestnet\";\n  ChainId[ChainId[\"xDai\"] = 100] = \"xDai\";\n  ChainId[ChainId[\"Polygon\"] = 137] = \"Polygon\";\n  ChainId[ChainId[\"Theta\"] = 361] = \"Theta\";\n  ChainId[ChainId[\"ThetaTestnet\"] = 365] = \"ThetaTestnet\";\n  ChainId[ChainId[\"Moonriver\"] = 1285] = \"Moonriver\";\n  ChainId[ChainId[\"Mumbai\"] = 80001] = \"Mumbai\";\n  ChainId[ChainId[\"Harmony\"] = 1666600000] = \"Harmony\";\n  ChainId[ChainId[\"Palm\"] = 11297108109] = \"Palm\";\n  ChainId[ChainId[\"Localhost\"] = 1337] = \"Localhost\";\n  ChainId[ChainId[\"Hardhat\"] = 31337] = \"Hardhat\";\n  ChainId[ChainId[\"Fantom\"] = 250] = \"Fantom\";\n  ChainId[ChainId[\"Avalanche\"] = 43114] = \"Avalanche\";\n  ChainId[ChainId[\"Songbird\"] = 19] = \"Songbird\";\n  ChainId[ChainId[\"MoonbaseAlpha\"] = 1287] = \"MoonbaseAlpha\";\n  ChainId[ChainId[\"OptimismKovan\"] = 69] = \"OptimismKovan\";\n  ChainId[ChainId[\"Optimism\"] = 10] = \"Optimism\";\n})(ChainId || (ChainId = {}));","map":{"version":3,"sources":["/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/@usedapp/core/src/constants/chainId.ts"],"names":[],"mappings":"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","sourcesContent":["// organize imports in alphabet order to sparse the conflict when adding a new chain\nimport {\n  Localhost,\n  Hardhat,\n  Avalanche,\n  BSC,\n  BSCTestnet,\n  Fantom,\n  Harmony,\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan,\n  Moonriver,\n  MoonbaseAlpha,\n  Palm,\n  Polygon,\n  Mumbai,\n  Songbird,\n  Theta,\n  ThetaTestnet,\n  xDai,\n  OptimismKovan,\n  Optimism,\n} from '../model'\n\n// rough alphabet order (put network from the same chain together)\nexport const DEFAULT_SUPPORTED_CHAINS = [\n  Localhost,\n  Hardhat,\n  Avalanche,\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan,\n  BSC,\n  BSCTestnet,\n  Fantom,\n  Harmony,\n  Moonriver,\n  MoonbaseAlpha,\n  Palm,\n  Polygon,\n  Mumbai,\n  Songbird,\n  Theta,\n  ThetaTestnet,\n  xDai,\n  OptimismKovan,\n  Optimism,\n]\n\nexport enum ChainId {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Kovan = 42,\n  BSC = 56,\n  BSCTestnet = 97,\n  xDai = 100,\n  Polygon = 137,\n  Theta = 361,\n  ThetaTestnet = 365,\n  Moonriver = 1285,\n  Mumbai = 80001,\n  Harmony = 1666600000,\n  Palm = 11297108109,\n  Localhost = 1337,\n  Hardhat = 31337,\n  Fantom = 250,\n  Avalanche = 43114,\n  Songbird = 19,\n  MoonbaseAlpha = 1287,\n  OptimismKovan = 69,\n  Optimism = 10,\n}\n"]},"metadata":{},"sourceType":"module"}