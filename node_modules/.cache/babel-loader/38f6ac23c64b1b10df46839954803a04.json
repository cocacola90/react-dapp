{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\nexport var ConfigContext = createContext({\n  config: DEFAULT_CONFIG,\n  updateConfig: function updateConfig() {\n    return undefined;\n  }\n});\n\nvar validConfigs = function validConfigs(configs) {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n\nexport function useConfig() {\n  var _a;\n\n  var _useContext = useContext(ConfigContext),\n      config = _useContext.config; // backward compatible with supportedChains\n\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    var networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(function (chainId) {\n      return getChainById(chainId);\n    });\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks: networks\n    }));\n  }\n\n  return validConfigs(config);\n}\nexport function useUpdateConfig() {\n  var _useContext2 = useContext(ConfigContext),\n      updateConfig = _useContext2.updateConfig;\n\n  return updateConfig;\n}","map":null,"metadata":{},"sourceType":"module"}