{"ast":null,"code":"import { DEFAULT_SUPPORTED_CHAINS } from '../constants';\nexport var getChainById = function getChainById(chainId) {\n  return DEFAULT_SUPPORTED_CHAINS.find(function (network) {\n    return network.chainId === chainId;\n  });\n};\n\nvar deprecationWarning = function deprecationWarning(methodName) {\n  return console.warn(\"\".concat(methodName, \" is deprecated, can call with Chain directly\"));\n};\n\nexport var getExplorerAddressLink = function getExplorerAddressLink(address, chainId) {\n  var _a;\n\n  deprecationWarning('getExplorerAddressLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerAddressLink(address)) || '';\n};\nexport var getExplorerTransactionLink = function getExplorerTransactionLink(transactionHash, chainId) {\n  var _a;\n\n  deprecationWarning('getExplorerTransactionLink');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.getExplorerTransactionLink(transactionHash)) || '';\n};\nexport var getChainName = function getChainName(chainId) {\n  var _a;\n\n  deprecationWarning('getChainName');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName) || '';\n};\nexport var isTestChain = function isTestChain(chainId) {\n  var _a;\n\n  deprecationWarning('isTestChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isTestChain) || false;\n};\nexport var isLocalChain = function isLocalChain(chainId) {\n  var _a;\n\n  deprecationWarning('isLocalChain');\n  return ((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isLocalChain) || false;\n};","map":null,"metadata":{},"sourceType":"module"}