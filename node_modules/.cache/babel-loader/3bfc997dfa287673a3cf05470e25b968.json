{"ast":null,"code":"import { utils } from 'ethers';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { shortenString } from './common';\nexport function shortenAddress(address) {\n  try {\n    var formattedAddress = utils.getAddress(address);\n    return shortenString(formattedAddress);\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\nexport function shortenIfAddress(address) {\n  if (typeof address === 'string' && address.length > 0) {\n    return shortenAddress(address);\n  }\n\n  return '';\n}\nexport function compareAddress(firstAddress, secondAddress) {\n  try {\n    var parsedFirstAddress = BigNumber.from(firstAddress);\n    var parsedSecondAddress = BigNumber.from(secondAddress);\n\n    if (parsedFirstAddress.gt(parsedSecondAddress)) {\n      return 1;\n    }\n\n    if (parsedFirstAddress.lt(parsedSecondAddress)) {\n      return -1;\n    }\n\n    return 0;\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\nexport function addressEqual(firstAddress, secondAddress) {\n  try {\n    return utils.getAddress(firstAddress) === utils.getAddress(secondAddress);\n  } catch (_a) {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}","map":null,"metadata":{},"sourceType":"module"}