{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Unity = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_2 = require(\"react\");\n\nvar use_unity_instance_1 = require(\"../hooks/use-unity-instance\");\n\nvar use_unity_loader_1 = require(\"../hooks/use-unity-loader\");\n\nvar generate_unity_instance_parameters_1 = require(\"../utils/generate-unity-instance-parameters\");\n/**\n * A unique instance identifier for each mounted Unity Instance.\n */\n\n\nvar unityInstanceIdentifier = 0;\n/**\n * Renders the Unity Instance to the React DOM.\n * @param props Properties of the Unity Component.\n * @returns A React Element.\n */\n\nfunction Unity(props) {\n  var htmlCanvasElement = react_2.useRef(null);\n  var unityContext = react_2.useState(props.unityContext)[0];\n  var unityInstanceParameters = generate_unity_instance_parameters_1.generateUnityInstanceParameters(unityContext, props); // The Unity Loader is required for the unity instance to be created.\n\n  var unityLoaderStatus = use_unity_loader_1.useUnityLoader(unityContext.unityConfig.loaderUrl); // Creates the Unity Instance while defining a set of hooks which indicate\n  // whether the Unity Instance is ready to be used among with its progression.\n\n  var _a = use_unity_instance_1.useUnityInstance(unityLoaderStatus, htmlCanvasElement.current, unityInstanceParameters),\n      unityInstance = _a.unityInstance,\n      progression = _a.progression,\n      error = _a.error; // Effect hook will be called when the Unity instance changes.\n\n\n  react_2.useEffect(function () {\n    // If the Unity Instance has been defined, it will be passed to the\n    // Unity Context.\n    if (unityInstance !== null) {\n      unityContext.unityInstance = unityInstance;\n    }\n  }, [unityInstance]); // Effect hook will be called when the reference to the canvas changes.\n\n  react_2.useEffect(function () {\n    // Whether or not the canvas has been defined, it will be set as the\n    // current html canvas element on the Unity Context.\n    unityContext.htmlCanvasElement = htmlCanvasElement.current; // Only when it is defined, an event will be dispatched.\n\n    if (unityContext.htmlCanvasElement !== null) {\n      unityContext.dispatchEvent(\"canvas\", htmlCanvasElement.current);\n    }\n  }, [htmlCanvasElement]); // Effect hook will be called when the Unity Instance progession changes.\n\n  react_2.useEffect(function () {\n    // If the Unity Instance loading progression hits 1, then the Unity\n    // Instance is ready to be used and the loaded event is dispatched.\n    if (progression === 1) {\n      unityContext.dispatchEvent(\"loaded\");\n    } // Dispatches an event every time the Unity Instance progression changes.\n\n\n    unityContext.dispatchEvent(\"progress\", progression);\n  }, [progression]); // Effect hook will be called when the Unity Instance threw an error.\n\n  react_2.useEffect(function () {\n    // If the Unity Instance threw an error, then the error event is\n    // dispatched.\n    if (error !== null) {\n      unityContext.dispatchEvent(\"error\", error);\n    }\n  }, [error]); // Event hook will be called when the component mounts and unmounts.\n\n  react_2.useEffect(function () {\n    // Each time a component is mounted, the Unity Context identifier is\n    // incremented to ensure that each component is referenced correctly.\n    unityInstanceIdentifier++;\n    return function () {\n      // If the Unity Instance is defined, Quit will be invoked on the Unity\n      // Instance. This removes the Unity Loader and Framework from memory.\n      unityContext === null || unityContext === void 0 ? void 0 : unityContext.quitUnityInstance();\n    };\n  }, []); // Renders the actual canvas element which Unity will use to render.\n\n  return react_1.createElement(\"canvas\", {\n    // Unity 2021.2 and above requires a unique identifier for each canvas\n    // internally. This is not documented in the Unity documentation, but\n    // it is required for the canvas to be rendered. This is further explained\n    // in https://github.com/jeffreylanters/react-unity-webgl/issues/223.\n    id: \"unity-canvas-\" + unityInstanceIdentifier,\n    // A reference to the canvas element is required to create a Unity Instance.\n    ref: htmlCanvasElement,\n    // Push through of some properties.\n    className: props.className || undefined,\n    style: props.style || {},\n    tabIndex: props.tabIndex || undefined\n  });\n}\n\nexports.Unity = Unity;","map":null,"metadata":{},"sourceType":"script"}