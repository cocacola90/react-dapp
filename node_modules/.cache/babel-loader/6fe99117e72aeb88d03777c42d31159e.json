{"ast":null,"code":"import _classCallCheck from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kenshin/Documents/UnityProject/useDapp_demo/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { BigNumber } from '@ethersproject/bignumber';\nexport var CurrencyValue = /*#__PURE__*/function () {\n  function CurrencyValue(currency, value) {\n    _classCallCheck(this, CurrencyValue);\n\n    this.currency = currency;\n    this.value = value;\n  }\n\n  _createClass(CurrencyValue, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      var overrideOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.currency.format(this.value.toString(), overrideOptions);\n    }\n  }, {\n    key: \"checkCurrency\",\n    value: function checkCurrency(other) {\n      if (this.currency !== other.currency) {\n        throw new TypeError(\"Currency mismatch \".concat(this.currency.ticker, \" != \").concat(other.currency.ticker));\n      }\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return new CurrencyValue(this.currency, fn(this.value));\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.add(other.value);\n      });\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.sub(other.value);\n      });\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      return this.map(function (x) {\n        return x.mul(value);\n      });\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      return this.map(function (x) {\n        return x.div(value);\n      });\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(value) {\n      return this.map(function (x) {\n        return x.mod(value);\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.currency === other.currency && this.value.eq(other.value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(other) {\n      this.checkCurrency(other);\n      return this.value.lt(other.value);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(other) {\n      this.checkCurrency(other);\n      return this.value.lte(other.value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(other) {\n      this.checkCurrency(other);\n      return this.value.gt(other.value);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(other) {\n      this.checkCurrency(other);\n      return this.value.gte(other.value);\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return this.value.isZero();\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(currency, value) {\n      return new CurrencyValue(currency, BigNumber.from(value));\n    }\n  }, {\n    key: \"zero\",\n    value: function zero(currency) {\n      return new CurrencyValue(currency, BigNumber.from(0));\n    }\n  }]);\n\n  return CurrencyValue;\n}();","map":null,"metadata":{},"sourceType":"module"}